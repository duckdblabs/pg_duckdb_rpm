diff --git a/Makefile b/Makefile
index b69c612..fe5569f 100644
--- a/Makefile
+++ b/Makefile
@@ -43,6 +43,9 @@ DUCKDB_BUILD_DIR = third_party/duckdb/build/$(DUCKDB_BUILD_TYPE)
 ifeq ($(DUCKDB_BUILD), ReleaseStatic)
 	FULL_DUCKDB_LIB = $(DUCKDB_BUILD_DIR)/libduckdb_bundle.a
 	PG_DUCKDB_LINK_FLAGS = $(FULL_DUCKDB_LIB)
+else ifeq ($(DUCKDB_BUILD), System)
+	FULL_DUCKDB_LIB = 
+	PG_DUCKDB_LINK_FLAGS = -lduckdb
 else
 	FULL_DUCKDB_LIB = $(DUCKDB_BUILD_DIR)/src/libduckdb$(DLSUFFIX)
 	PG_DUCKDB_LINK_FLAGS = -lduckdb
@@ -74,12 +77,14 @@ SHLIB_LINK += $(PG_DUCKDB_LINK_FLAGS)
 
 include Makefile.global
 
+ifneq ($(DUCKDB_BUILD), System)
 # We need the DuckDB header files to build our own .o files. We depend on the
 # duckdb submodule HEAD, because that target pulls in the submodule which
 # includes those header files. This does mean that we rebuild our .o files
 # whenever we change the DuckDB version, but that seems like a fairly
 # reasonable thing to do anyway, even if not always strictly necessary always.
 $(OBJS): .git/modules/third_party/duckdb/HEAD
+endif
 
 COMPILE.cc.bc += $(PG_CPPFLAGS)
 COMPILE.cxx.bc += $(PG_CXXFLAGS)
@@ -109,6 +114,7 @@ check: installcheck pycheck schedulecheck
 schedulecheck:
 	./scripts/schedule-check.sh
 
+ifneq ($(DUCKDB_BUILD), System)
 duckdb: $(FULL_DUCKDB_LIB)
 
 .git/modules/third_party/duckdb/HEAD:
@@ -149,3 +155,4 @@ format:
 format-all:
 	find src include -iname '*.hpp' -o -iname '*.h' -o -iname '*.cpp' -o -iname '*.c' | xargs clang-format -i
 	ruff format
+endif
